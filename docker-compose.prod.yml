version: '3.8'

services:
  # PostgreSQL Database
  postgres:
    image: postgres:15-alpine
    container_name: routix_postgres
    environment:
      POSTGRES_DB: routix_db
      POSTGRES_USER: routix_user
      POSTGRES_PASSWORD: ${POSTGRES_PASSWORD}
    volumes:
      - postgres_data:/var/lib/postgresql/data
      - ./init.sql:/docker-entrypoint-initdb.d/init.sql
    ports:
      - "5432:5432"
    restart: unless-stopped
    networks:
      - routix_network

  # Redis Cache
  redis:
    image: redis:7-alpine
    container_name: routix_redis
    ports:
      - "6379:6379"
    volumes:
      - redis_data:/data
    restart: unless-stopped
    networks:
      - routix_network

  # Backend API
  backend:
    build:
      context: ./routix-backend
      dockerfile: Dockerfile.prod
    container_name: routix_backend
    environment:
      - DATABASE_URL=postgresql://routix_user:${POSTGRES_PASSWORD}@postgres:5432/routix_db
      - REDIS_URL=redis://redis:6379
      - SECRET_KEY=${SECRET_KEY}
      - OPENAI_API_KEY=${OPENAI_API_KEY}
      - GEMINI_API_KEY=${GEMINI_API_KEY}
    volumes:
      - ./uploads:/app/uploads
      - ./logs:/app/logs
    ports:
      - "8000:8000"
    depends_on:
      - postgres
      - redis
    restart: unless-stopped
    networks:
      - routix_network

  # Frontend
  frontend:
    build:
      context: ./routix-frontend
      dockerfile: Dockerfile.prod
    container_name: routix_frontend
    environment:
      - NEXT_PUBLIC_API_URL=https://api.routix.com
    ports:
      - "3000:3000"
    depends_on:
      - backend
    restart: unless-stopped
    networks:
      - routix_network

  # Nginx Reverse Proxy
  nginx:
    image: nginx:alpine
    container_name: routix_nginx
    ports:
      - "80:80"
      - "443:443"
    volumes:
      - ./nginx/nginx.conf:/etc/nginx/nginx.conf
      - ./nginx/ssl:/etc/nginx/ssl
      - ./uploads:/var/www/uploads
    depends_on:
      - frontend
      - backend
    restart: unless-stopped
    networks:
      - routix_network

volumes:
  postgres_data:
  redis_data:

networks:
  routix_network:
    driver: bridge
